"""
Скрипт для инициализации базы данных:
- Создает таблицы
- Заполняет регионы России
- Создает тестовых пользователей с разными ролями
"""

import os
from app import create_app, db
from app.models import User, Region, UserRole



def init_db():
    # Создание приложения в режиме разработки
    app = create_app('development')

    with app.app_context():
        # Создание всех таблиц
        db.create_all()

        # Проверка, что таблица регионов пуста
        if Region.query.count() == 0:
            print("Заполнение таблицы регионов...")
            regions = [
                "Адыгея", "Алтай", "Башкортостан", "Бурятия", "Дагестан",
                "Донецкая Народная Республика", "Ингушетия", "Кабардино-Балкария",
                "Калмыкия", "Карачаево-Черкесия", "Карелия", "Коми", "Крым",
                "Луганская Народная Республика", "Марий Эл", "Мордовия", "Саха (Якутия)",
                "Северная Осетия", "Татарстан", "Тыва", "Удмуртия", "Хакасия",
                "Чечня", "Чувашия", "Алтайский край", "Забайкальский край",
                "Камчатский край", "Краснодарский край", "Красноярский край",
                "Пермский край", "Приморский край", "Ставропольский край",
                "Хабаровский край", "Амурская область", "Архангельская область",
                "Астраханская область", "Белгородская область", "Брянская область",
                "Владимирская область", "Волгоградская область", "Вологодская область",
                "Воронежская область", "Запорожская область", "Ивановская область",
                "Иркутская область", "Калининградская область", "Калужская область",
                "Кемеровская область", "Кировская область", "Костромская область",
                "Курганская область", "Курская область", "Ленинградская область",
                "Липецкая область", "Магаданская область", "Московская область",
                "Мурманская область", "Нижегородская область", "Новгородская область",
                "Новосибирская область", "Омская область", "Оренбургская область",
                "Орловская область", "Пензенская область", "Псковская область",
                "Ростовская область", "Рязанская область", "Самарская область",
                "Саратовская область", "Сахалинская область", "Свердловская область",
                "Смоленская область", "Тамбовская область", "Тверская область",
                "Томская область", "Тульская область", "Тюменская область",
                "Ульяновская область", "Херсонская область", "Челябинская область",
                "Ярославская область", "Москва", "Санкт-Петербург", "Севастополь",
                "Еврейская АО", "Ненецкий АО", "Ханты-Мансийский АО",
                "Чукотский АО", "Ямало-Ненецкий АО"
            ]

            for region_name in regions:
                region = Region(name=region_name)
                db.session.add(region)

            db.session.commit()
            print(f"Добавлено {len(regions)} регионов")

        # Создание тестовых пользователей, если их нет
        if User.query.count() == 0:
            print("Создание тестовых пользователей...")

            # Получение регионов для тестовых пользователей
            moscow = Region.query.filter_by(name="Москва").first()
            spb = Region.query.filter_by(name="Санкт-Петербург").first()

            # Создание администратора ФСП
            admin = User(
                username="admin",
                email="admin@fsp.ru",
                role=UserRole.FSP_ADMIN,
                region_id=moscow.id if moscow else 1
            )
            admin.password = "password"

            # Создание регионального представителя
            regional_rep = User(
                username="regional",
                email="regional@fsp.ru",
                role=UserRole.REGIONAL_REPRESENTATIVE,
                region_id=moscow.id if moscow else 1
            )
            regional_rep.password = "password"

            # Создание спортсмена
            athlete = User(
                username="athlete",
                email="athlete@fsp.ru",
                role=UserRole.ATHLETE,
                region_id=spb.id if spb else 2
            )
            athlete.password = "password"

            db.session.add_all([admin, regional_rep, athlete])
            db.session.commit()
            print("Тестовые пользователи созданы")

        print("Инициализация базы данных завершена")


if __name__ == "__main__":
    init_db()